// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  who       User     @relation(fields: [userId], references: [id])
  oldData   Json
  newData   Json
  userId    String
}

model Company {
  id             String           @id @default(uuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now())
  name           String
  address        String?
  phoneNumber    String?
  employee       Employee[]
  Inventory      Inventory[]
  SellingChannel SellingChannel[]
  Warehouse      Warehouse[]
  Tag            Tag[]
  Item           Item[]
  Vendor         Vendor[]
  PurchaseOrder  PurchaseOrder[]
  Listing        Listing[]
  Customer       Customer[]
  SalesOrder     SalesOrder[]
}

model Employee {
  id            String          @id @default(uuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
  role          String?
  user          User            @relation(fields: [userId], references: [id])
  userId        String
  company       Company?        @relation(fields: [companyId], references: [id])
  companyId     String?
  PurchaseOrder PurchaseOrder[]
}

model User {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String?
  email     String     @unique
  password  String?
  activity  Activity[]
  employeer Employee[]
}

model Inventory {
  id          String     @id @default(uuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  item        Item       @relation(fields: [itemId], references: [id])
  quantity    Int        @default(0)
  itemId      String
  companyId   String
  batchNumber String
  owner       Company    @relation(fields: [companyId], references: [id])
  storedAt    Warehouse? @relation(fields: [warehouseId], references: [id])
  warehouseId String?
}

model Item {
  id             String          @id @default(uuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
  name           String
  description    String
  vendors        Vendor[]
  inventory      Inventory[]
  tags           Tag[]
  sku            String
  listing        Listing[]
  purchaseOrders PurchaseOrder[]
  owner          Company         @relation(fields: [companyId], references: [id])
  companyId      String
  salesOrders    SalesOrder[]
}

model Vendor {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  name          String
  description   String
  contactNumber String
  emailAddress  String
  item          Item?    @relation(fields: [itemId], references: [id])
  itemId        String?
  owner         Company  @relation(fields: [companyId], references: [id])
  companyId     String
}

model PurchaseOrder {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  issuedBy      Employee @relation(fields: [employeeId], references: [id])
  employeeId    String
  orderSnapshot Json
  orderStatus   String
  price         String
  item          Item[]
  owner         Company  @relation(fields: [companyId], references: [id])
  companyId     String
}

model Tag {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  name        String
  description String
  taggedItems Item[]
  owner       Company  @relation(fields: [companyId], references: [id])
  companyId   String
}

model Warehouse {
  id              String      @id @default(uuid())
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @default(now())
  name            String
  storedInventory Inventory[]
  description     String?
  location        String?
  phoneNumber     String?
  owner           Company     @relation(fields: [companyId], references: [id])
  companyId       String
}

model SellingChannel {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  name      String
  location  String
  listing   Listing[]
  owner     Company   @relation(fields: [companyId], references: [id])
  companyId String
}

model Listing {
  id               String          @id @default(uuid())
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @default(now())
  item             Item            @relation(fields: [itemId], references: [id])
  itemId           String
  quantity         Int
  description      String
  SellingChannel   SellingChannel? @relation(fields: [sellingChannelId], references: [id])
  sellingChannelId String?
  price            String
  discount         String
  owner            Company         @relation(fields: [companyId], references: [id])
  companyId        String
}

model Customer {
  id           String       @id @default(uuid())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
  name         String
  phoneNumber  String
  emailAddress String
  address      String
  country      String
  SalesOrder   SalesOrder[]
  owner        Company      @relation(fields: [companyId], references: [id])
  companyId    String
}

model SalesOrder {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  customer      Customer @relation(fields: [customerId], references: [id])
  customerId    String
  orderSnapshot Json
  orderStatus   String
  price         String
  orderStatusId String
  owner         Company  @relation(fields: [companyId], references: [id])
  companyId     String
  items         Item[]
}
